#     posdata<-data[1:n,]
#     negdata<-data[-c(1:n),]
#     data_y0 <- rep(0, nrow(posdata))
#     data_y2 <- rep(1, nrow(negdata))
#     data_y <- as.factor(c(data_y0, data_y2))
#     data_scaled_x02 <- rbind(posdata,negdata)
#     #
#     l_data <- cbind(data_y, data_scaled_x02)
#     # #
#     o2 <- lrm(data_y ~data_scaled_x02,  x = T, y = T, maxit = 1000)
#
#     theta<-coef(o2)
#     alp2<-theta[1]
#     beta2<-theta[-1]
#     alp1<-0
#     beta1<-rep(0,d)
#
#   }
# }
prop<-Sim_data$n1/m
out=PUEM::PUfit(posdata,negdata,pival,alp1,beta1,alp2,beta2)
### data split classification ###
sar_full_estimate<- out$out_detm_full
scar_full_estimate<-out$out_setm_full
sar_null_estimate<-out$out_detm_null
scar_null_estimate<-out$out_setm_null
#tr_sar_full_estimate<-out$tr_full3
elr_test<-2*(sar_full_estimate$loglik-scar_full_estimate$loglik)
rejection<-sum(elr_test>=qchisq(0.95,df=d))
elr_cover_sar<-2*(sar_full_estimate$loglik-sar_null_estimate$loglik)
cover_sar<-sum(elr_cover_sar<qchisq(0.95,1))
elr_cover_scar<-2*(scar_full_estimate$loglik-scar_null_estimate$loglik)
cover_scar<-sum(elr_cover_scar<qchisq(0.95,1))
result[i,]<-c(prop,scar_full_estimate$pival,sar_full_estimate$pival,elr_test,rejection,elr_cover_scar,cover_scar,elr_cover_sar,cover_sar)
print(c(i, result[i,]))
}
result
}
n_sample_size<-1000 # 1000-5000
MU2_num<-1
Mu_dim<-7
pival_true=0.05
Result=inference_Simu(n_sample_size,Mu_dim,pival_true,MU2_num)
Result
library(PUEM)
library(MASS)
gendata=function(n,m,pival,mu0,mu1,mu2)
{
d=length(mu0)
sig=diag(rep(1,d))
n1=rbinom(1,m,pival)
n2=m-n1
posdata=mvrnorm(n,mu=mu0,Sigma=sig)
negdata=rbind(mvrnorm(n1,mu=mu1,Sigma=sig),
mvrnorm(n2,mu=mu2,Sigma=sig))
list(posdata=posdata,negdata=negdata,n1=n1)
}
inference_Simu<-function(n,mu_dim,pival,mu_2_num){
# n<-5000
# mu_dim=7
# pival=0.3
m=n          # sample size of the target data
d<-15        # dimension of features X
#pival=0.3    # true value of mixture propotion \pi in the target data
mu0=rep(0,d)
mu1=c(rep(1, mu_dim), rep(0, d-mu_dim))
mu2=rep(mu_2_num,d)
alp1=-sum(mu1^2/2)
beta1=mu1
alp2=-sum(mu2^2/2)
beta2=mu2
#sed<-read.table("newseed.txt")$x
sed<-read.table("/Users/liusiyan/Desktop/comments_code/qin_sar_null_classify_code/newseed.txt")$x
num_sim<-3
result<-matrix(rep(0,9*num_sim),ncol=9)
for(i in 1: num_sim)
{
set.seed(sed[i])
Sim_data=gendata(n,m,pival,mu0,mu1,mu2)
posdata<-Sim_data$posdata
negdata<-Sim_data$negdata
data<-rbind(posdata,negdata)
# if(standard==TRUE){
#   for(ni in 1:ncol(data)){
#     data[,ni]=scale(data[,ni])
#     posdata<-data[1:n,]
#     negdata<-data[-c(1:n),]
#     data_y0 <- rep(0, nrow(posdata))
#     data_y2 <- rep(1, nrow(negdata))
#     data_y <- as.factor(c(data_y0, data_y2))
#     data_scaled_x02 <- rbind(posdata,negdata)
#     #
#     l_data <- cbind(data_y, data_scaled_x02)
#     # #
#     o2 <- lrm(data_y ~data_scaled_x02,  x = T, y = T, maxit = 1000)
#
#     theta<-coef(o2)
#     alp2<-theta[1]
#     beta2<-theta[-1]
#     alp1<-0
#     beta1<-rep(0,d)
#
#   }
# }
prop<-Sim_data$n1/m
out=PUEM::PUfit(posdata,negdata,pival,alp1,beta1,alp2,beta2)
### data split classification ###
sar_full_estimate<- out$out_detm_full
scar_full_estimate<-out$out_setm_full
sar_null_estimate<-out$out_detm_null
scar_null_estimate<-out$out_setm_null
#tr_sar_full_estimate<-out$tr_full3
elr_test<-2*(sar_full_estimate$loglik-scar_full_estimate$loglik)
rejection<-sum(elr_test>=qchisq(0.95,df=d))
elr_cover_sar<-2*(sar_full_estimate$loglik-sar_null_estimate$loglik)
cover_sar<-sum(elr_cover_sar<qchisq(0.95,1))
elr_cover_scar<-2*(scar_full_estimate$loglik-scar_null_estimate$loglik)
cover_scar<-sum(elr_cover_scar<qchisq(0.95,1))
result[i,]<-c(prop,scar_full_estimate$pival,sar_full_estimate$pival,elr_test,rejection,elr_cover_scar,cover_scar,elr_cover_sar,cover_sar)
print(c(i, result[i,]))
}
result
}
n_sample_size<-1000 # 1000-5000
MU2_num<-1
Mu_dim<-7
pival_true=0.7
Result=inference_Simu(n_sample_size,Mu_dim,pival_true,MU2_num)
Result
library(PUEM)
library(MASS)
gendata=function(n,m,pival,mu0,mu1,mu2)
{
d=length(mu0)
sig=diag(rep(1,d))
n1=rbinom(1,m,pival)
n2=m-n1
posdata=mvrnorm(n,mu=mu0,Sigma=sig)
negdata=rbind(mvrnorm(n1,mu=mu1,Sigma=sig),
mvrnorm(n2,mu=mu2,Sigma=sig))
list(posdata=posdata,negdata=negdata,n1=n1)
}
inference_Simu<-function(n,mu_dim,pival,mu_2_num){
# n<-5000
# mu_dim=7
# pival=0.3
m=n          # sample size of the target data
d<-15        # dimension of features X
#pival=0.3    # true value of mixture propotion \pi in the target data
mu0=rep(0,d)
mu1=c(rep(1, mu_dim), rep(0, d-mu_dim))
mu2=rep(mu_2_num,d)
alp1=-sum(mu1^2/2)
beta1=mu1
alp2=-sum(mu2^2/2)
beta2=mu2
#sed<-read.table("newseed.txt")$x
sed<-read.table("/Users/liusiyan/Desktop/comments_code/qin_sar_null_classify_code/newseed.txt")$x
num_sim<-2
result<-matrix(rep(0,9*num_sim),ncol=9)
for(i in 2: num_sim)
{
set.seed(sed[i])
Sim_data=gendata(n,m,pival,mu0,mu1,mu2)
posdata<-Sim_data$posdata
negdata<-Sim_data$negdata
data<-rbind(posdata,negdata)
# if(standard==TRUE){
#   for(ni in 1:ncol(data)){
#     data[,ni]=scale(data[,ni])
#     posdata<-data[1:n,]
#     negdata<-data[-c(1:n),]
#     data_y0 <- rep(0, nrow(posdata))
#     data_y2 <- rep(1, nrow(negdata))
#     data_y <- as.factor(c(data_y0, data_y2))
#     data_scaled_x02 <- rbind(posdata,negdata)
#     #
#     l_data <- cbind(data_y, data_scaled_x02)
#     # #
#     o2 <- lrm(data_y ~data_scaled_x02,  x = T, y = T, maxit = 1000)
#
#     theta<-coef(o2)
#     alp2<-theta[1]
#     beta2<-theta[-1]
#     alp1<-0
#     beta1<-rep(0,d)
#
#   }
# }
prop<-Sim_data$n1/m
out=PUEM::PUfit(posdata,negdata,pival,alp1,beta1,alp2,beta2)
### data split classification ###
sar_full_estimate<- out$out_detm_full
scar_full_estimate<-out$out_setm_full
sar_null_estimate<-out$out_detm_null
scar_null_estimate<-out$out_setm_null
#tr_sar_full_estimate<-out$tr_full3
elr_test<-2*(sar_full_estimate$loglik-scar_full_estimate$loglik)
rejection<-sum(elr_test>=qchisq(0.95,df=d))
elr_cover_sar<-2*(sar_full_estimate$loglik-sar_null_estimate$loglik)
cover_sar<-sum(elr_cover_sar<qchisq(0.95,1))
elr_cover_scar<-2*(scar_full_estimate$loglik-scar_null_estimate$loglik)
cover_scar<-sum(elr_cover_scar<qchisq(0.95,1))
result[i,]<-c(prop,scar_full_estimate$pival,sar_full_estimate$pival,elr_test,rejection,elr_cover_scar,cover_scar,elr_cover_sar,cover_sar)
print(c(i, result[i,]))
}
result
}
n_sample_size<-1000 # 1000-5000
MU2_num<-1
Mu_dim<-7
pival_true=0.05
Result=inference_Simu(n_sample_size,Mu_dim,pival_true,MU2_num)
Result
library(PUEM)
library(MASS)
setwd("/Users/liusiyan/Downloads/PUEM")
gendata=function(n,m,pival,mu0,mu1,mu2)
{
d=length(mu0)
sig=diag(rep(1,d))
n1=rbinom(1,m,pival)
n2=m-n1
posdata=mvrnorm(n,mu=mu0,Sigma=sig)
negdata=rbind(mvrnorm(n1,mu=mu1,Sigma=sig),
mvrnorm(n2,mu=mu2,Sigma=sig))
list(posdata=posdata,negdata=negdata)
}
gentest=function(m,pival,mu1,mu2)
{
d=length(mu1)
sig=diag(rep(1,d))
n1=rbinom(1,m,pival)
n2=m-n1
negdata=rbind(mvrnorm(n1,mu=mu1,Sigma=sig),
mvrnorm(n2,mu=mu2,Sigma=sig))
ylab=c(rep(1,n1),rep(0,n2))
list(negdata=negdata,ylab=ylab)
}
phi<-function(x_test,bt_1,bt_2,pi){
re<-rep(0,nrow(x_test))
phi_label<-rep(0,nrow(x_test))
for(i in 1:nrow(x_test) ){
phi_judge<- pi*exp(bt_1[1]+x_test[i,]%*%bt_1[-1])/(pi*exp(bt_1[1]+x_test[i,]%*%bt_1[-1])+(1-pi)*exp(bt_2[1]+x_test[i,]%*%bt_2[-1]))
if(phi_judge>=0.5){phi_label[i]=1}
}
return(phi_label)
}
classification_Simu<-function(n,mu1,mu2,pival,pi_est){
m=n          # sample size of the target data
d<-15        # dimension of features X
mu0=rep(0,d)
alp1=-sum(mu1^2/2)
beta1=mu1
alp2=-sum(mu2^2/2)
beta2=mu2
sed<-read.table("newseed.txt")$x
num_sim<-3
accuracy<-rep(0,num_sim)
for(i in 1:num_sim)
{
set.seed(sed[i])
Sim_data=gendata(n,m,pival,mu0,mu1,mu2)
posdata<-Sim_data$posdata
negdata<-Sim_data$negdata
data<-rbind(posdata,negdata)
out=PUEM::PUfit(posdata,negdata,pi_est,alp1,beta1,alp2,beta2)
### data split classification ###
sar_null_estimate<-out$out_detm_null
### validation data ###
set.seed(sed[(i+100)])
Valdata<-gentest(m,pival,mu1,mu2)
valdata<-Valdata$negdata
valdata_true_label<-Valdata$ylab
sar_null_pred_label<-phi(valdata,c(sar_null_estimate$alp1,sar_null_estimate$beta1),c(sar_null_estimate$alp2,sar_null_estimate$beta2),sar_null_estimate$pival)
#  classification accuracy
sar_null_accu<-mean(valdata_true_label==sar_null_pred_label)
accuracy[i]<-sar_null_accu
print(c(i,accuracy[i]))
}
accuracy
}
n_sample_size<-1000
k=1  # index of pival_est
pival_est<- c(0.25,0.30,0.35)
Mu_1<-c(rep(1,7),rep(0,8))
#Mu_1<-rep(4,15)
Mu_2<-rep(5,15)
pival_true=0.3
accuracy=classification_Simu(n_sample_size,Mu_1,Mu_2,pival_true,pival_est[k])
mean(accuracy)
library(PUEM)
library(MASS)
setwd("/Users/liusiyan/Downloads/PUEM")
gendata=function(n,m,pival,mu0,mu1,mu2)
{
d=length(mu0)
sig=diag(rep(1,d))
n1=rbinom(1,m,pival)
n2=m-n1
posdata=mvrnorm(n,mu=mu0,Sigma=sig)
negdata=rbind(mvrnorm(n1,mu=mu1,Sigma=sig),
mvrnorm(n2,mu=mu2,Sigma=sig))
list(posdata=posdata,negdata=negdata)
}
gentest=function(m,pival,mu1,mu2)
{
d=length(mu1)
sig=diag(rep(1,d))
n1=rbinom(1,m,pival)
n2=m-n1
negdata=rbind(mvrnorm(n1,mu=mu1,Sigma=sig),
mvrnorm(n2,mu=mu2,Sigma=sig))
ylab=c(rep(1,n1),rep(0,n2))
list(negdata=negdata,ylab=ylab)
}
phi<-function(x_test,bt_1,bt_2,pi){
re<-rep(0,nrow(x_test))
phi_label<-rep(0,nrow(x_test))
for(i in 1:nrow(x_test) ){
phi_judge<- pi*exp(bt_1[1]+x_test[i,]%*%bt_1[-1])/(pi*exp(bt_1[1]+x_test[i,]%*%bt_1[-1])+(1-pi)*exp(bt_2[1]+x_test[i,]%*%bt_2[-1]))
if(phi_judge>=0.5){phi_label[i]=1}
}
return(phi_label)
}
classification_Simu<-function(n,mu1,mu2,pival,pi_est){
m=n          # sample size of the target data
d<-15        # dimension of features X
mu0=rep(0,d)
alp1=-sum(mu1^2/2)
beta1=mu1
alp2=-sum(mu2^2/2)
beta2=mu2
sed<-read.table("newseed.txt")$x
num_sim<-3
accuracy<-rep(0,num_sim)
for(i in 1:num_sim)
{
set.seed(sed[i])
Sim_data=gendata(n,m,pival,mu0,mu1,mu2)
posdata<-Sim_data$posdata
negdata<-Sim_data$negdata
data<-rbind(posdata,negdata)
out=PUEM::PUfit(posdata,negdata,pi_est,alp1,beta1,alp2,beta2)
sar_null_estimate<-out$out_detm_null
### validation data ###
set.seed(sed[(i+100)])
Valdata<-gentest(m,pival,mu1,mu2)
valdata<-Valdata$negdata
valdata_true_label<-Valdata$ylab
sar_null_pred_label<-phi(valdata,c(sar_null_estimate$alp1,sar_null_estimate$beta1),c(sar_null_estimate$alp2,sar_null_estimate$beta2),sar_null_estimate$pival)
#  classification accuracy
sar_null_accu<-mean(valdata_true_label==sar_null_pred_label)
accuracy[i]<-sar_null_accu
print(c(i,accuracy[i]))
}
accuracy
}
n_sample_size<-1000
k=1  # index of pival_est
pival_est<- c(0.25,0.30,0.35)
#Mu_1<-c(rep(1,7),rep(0,8))
Mu_1<-rep(4,15)
Mu_2<-rep(5,15)
pival_true=0.3
accuracy=classification_Simu(n_sample_size,Mu_1,Mu_2,pival_true,pival_est[k])
mean(accuracy)
library(PUEM)
library(PUEM)
library(PUEM)
library(MASS)
setwd("/Users/liusiyan/Downloads/PUEM")
gendata=function(n,m,pival,mu1,mu3,mu2)
{
d=length(mu1)
sig=diag(rep(1,d))
n1=rbinom(1,m,pival)
n2=m-n1
posdata=mvrnorm(n,mu=mu1,Sigma=sig)
negdata=rbind(mvrnorm(n1,mu=mu3,Sigma=sig),
mvrnorm(n2,mu=mu2,Sigma=sig))
list(posdata=posdata,negdata=negdata)
}
inference_Simu<-function(n,mu_dim,pival,mu_2_num){
m=n          # sample size of the target data
d<-15        # dimension of features X
mu1=rep(0,d)
mu3=c(rep(1, mu_dim), rep(0, d-mu_dim))
mu2=rep(mu_2_num,d)
alp1=-sum(mu3^2/2)
beta1=mu3
alp2=-sum(mu2^2/2)
beta2=mu2
sed<-read.table("newseed.txt")$x
num_sim<-3
result<-matrix(rep(0,2*num_sim),ncol=2)
for(i in 1: num_sim)
{
set.seed(sed[i])
Sim_data=gendata(n,m,pival,mu1,mu3,mu2)
posdata<-Sim_data$posdata
negdata<-Sim_data$negdata
data<-rbind(posdata,negdata)
out=PUEM::PUfit(posdata,negdata,pival,alp1,beta1,alp2,beta2)
sar_full_estimate<- out$out_detm_full
scar_full_estimate<-out$out_setm_full
elr_test<-2*(sar_full_estimate$loglik-scar_full_estimate$loglik)
rejection<-sum(elr_test>=qchisq(0.95,df=d))
result[i,]<-c(elr_test,rejection)
print(c(i, result[i,]))
}
result
}
n_sample_size<-1000 # 1000-5000
MU2_num<-1
Mu_dim<-0   # 0-7; numbers of 1 in mu_2
pival_true=0.75
Result=inference_Simu(n_sample_size,Mu_dim,pival_true,MU2_num)
colnames(Result) <- c("elr_test","rejection")
Result
library(PUEM)
library(MASS)
setwd("/Users/liusiyan/Downloads/PUEM")
gendata=function(n,m,pival,mu1,mu3,mu2)
{
d=length(mu1)
sig=diag(rep(1,d))
n1=rbinom(1,m,pival)
n2=m-n1
posdata=mvrnorm(n,mu=mu1,Sigma=sig)
negdata=rbind(mvrnorm(n1,mu=mu3,Sigma=sig),
mvrnorm(n2,mu=mu2,Sigma=sig))
list(posdata=posdata,negdata=negdata)
}
gentest=function(m,pival,mu3,mu2)
{
d=length(mu3)
sig=diag(rep(1,d))
n1=rbinom(1,m,pival)
n2=m-n1
negdata=rbind(mvrnorm(n1,mu=mu3,Sigma=sig),
mvrnorm(n2,mu=mu2,Sigma=sig))
ylab=c(rep(1,n1),rep(0,n2))
list(negdata=negdata,ylab=ylab)
}
phi<-function(x_test,bt_1,bt_2,pi){
re<-rep(0,nrow(x_test))
phi_label<-rep(0,nrow(x_test))
for(i in 1:nrow(x_test) ){
phi_judge<- pi*exp(bt_1[1]+x_test[i,]%*%bt_1[-1])/(pi*exp(bt_1[1]+x_test[i,]%*%bt_1[-1])+(1-pi)*exp(bt_2[1]+x_test[i,]%*%bt_2[-1]))
if(phi_judge>=0.5){phi_label[i]=1}
}
return(phi_label)
}
classification_Simu<-function(n,mu_dim,pival,mu_2_num){
m=n          # sample size of the target data
d<-15        # dimension of features X
mu1=rep(0,d)
mu3=c(rep(1, mu_dim), rep(0, d-mu_dim))
mu2=rep(mu_2_num,d)
alp1=-sum(mu3^2/2)
beta1=mu3
alp2=-sum(mu2^2/2)
beta2=mu2
sed<-read.table("newseed.txt")$x
num_sim<-3
accuracy<-matrix(rep(0,4*num_sim),ncol=4)
for(i in 1:num_sim)
{
set.seed(sed[i])
Sim_data=gendata(n,m,pival,mu1,mu3,mu2)
posdata<-Sim_data$posdata
negdata<-Sim_data$negdata
data<-rbind(posdata,negdata)
out=PUEM::PUfit(posdata,negdata,pival,alp1,beta1,alp2,beta2)
sar_full_estimate<-out$out_detm_full
scar_full_estimate<-out$out_setm_full
if((sar_full_estimate$pival<0.5 & pival>0.5) | (sar_full_estimate$pival>0.5 & pival<0.5)){
re_alp1<-sar_full_estimate$alp2
re_alp2<-sar_full_estimate$alp1
re_beta1<-sar_full_estimate$beta2
re_beta2<-sar_full_estimate$beta1
pi_hat<-1-sar_full_estimate$pival
}else{
re_alp1<-sar_full_estimate$alp1
re_alp2<-sar_full_estimate$alp2
re_beta1<-sar_full_estimate$beta1
re_beta2<-sar_full_estimate$beta2
pi_hat<-sar_full_estimate$pival
}
### validation data ###
set.seed(sed[(i+100)])
Valdata<-gentest(m,pival,mu3,mu2)
valdata<-Valdata$negdata
valdata_true_label<-Valdata$ylab
sar_pred_label<-phi(valdata,c(re_alp1,re_beta1),c(re_alp2,re_beta2),pi_hat)
#  classification accuracy
scar_pred_label<-phi(valdata,c(0,rep(0,d)),c(scar_full_estimate$alp,scar_full_estimate$beta),scar_full_estimate$pival)
sar_accu<-mean(valdata_true_label==sar_pred_label)
scar_accu<-mean(valdata_true_label==scar_pred_label)
accuracy[i,]<-c(sar_accu,scar_accu,sar_full_estimate$pival,scar_full_estimate$pival)
print(c(i,accuracy[i,]))
}
accuracy
}
n_sample_size<-1000 # 1000-5000
Mu_dim<-0   # 0 or 7; numbers of 1 in mu_3
pival_true=0.3  # 0.3 or 0.7
MU2_num<-1
accuracy=classification_Simu(n_sample_size,Mu_dim,pival_true,MU2_num)
colnames(accuracy) <- c("detm_accu","setm_accu","detm_pi_est","setm_pi_est")
accuracy
